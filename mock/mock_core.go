// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/andig/evcc/core (interfaces: LoadPointer)

// Package mock is a generated GoMock package.
package mock

import (
	api "github.com/andig/evcc/api"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLoadPointer is a mock of LoadPointer interface
type MockLoadPointer struct {
	ctrl     *gomock.Controller
	recorder *MockLoadPointerMockRecorder
}

// MockLoadPointerMockRecorder is the mock recorder for MockLoadPointer
type MockLoadPointerMockRecorder struct {
	mock *MockLoadPointer
}

// NewMockLoadPointer creates a new mock instance
func NewMockLoadPointer(ctrl *gomock.Controller) *MockLoadPointer {
	mock := &MockLoadPointer{ctrl: ctrl}
	mock.recorder = &MockLoadPointerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoadPointer) EXPECT() *MockLoadPointerMockRecorder {
	return m.recorder
}

// Update mocks base method
func (m *MockLoadPointer) Update(arg0 api.ChargeMode, arg1 float64) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(float64)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockLoadPointerMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockLoadPointer)(nil).Update), arg0, arg1)
}
